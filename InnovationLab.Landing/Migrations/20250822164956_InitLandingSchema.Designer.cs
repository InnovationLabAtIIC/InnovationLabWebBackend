// <auto-generated />
using System;
using InnovationLab.Landing.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InnovationLab.Landing.Migrations
{
    [DbContext(typeof(LandingDbContext))]
    [Migration("20250822164956_InitLandingSchema")]
    partial class InitLandingSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("landing")
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InnovationLab.Landing.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string[]>("Highlights")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("text[]");

                    b.Property<bool>("IsTeamEvent")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxTeamMembers")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentEventId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("RegistrationEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("RegistrationStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SeriesName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ParentEventId");

                    b.ToTable("Events", "landing");
                });

            modelBuilder.Entity("InnovationLab.Landing.Models.Event", b =>
                {
                    b.HasOne("InnovationLab.Landing.Models.Event", "ParentEvent")
                        .WithMany()
                        .HasForeignKey("ParentEventId");

                    b.Navigation("ParentEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
